## Chamber Lighting - HE2 Connector (Optional)
[output_pin blacklight]
pin: PB10
pwm: true
shutdown_value: 0
value: 0
cycle_time: 0.01666

[neopixel caselight]
pin: PB6
chain_count: 68
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

# caselight right is:
#		 neopixel:caselight (1-20)
# caselight center is:
#		 neopixel:caselight (21-47)
# caselight left is:
#		 neopixel:caselight (48-68)

[led_effect kitt]
leds:
   neopixel:caselight (1-68)
layers:
   gradient -0.30 0.50 add (1,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0) 
   gradient 0.30 0.50 top (1,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0)
frame_rate: 24
autostart: false

[led_effect overhead_white_on]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	static		1.0	0.0			add	(0.0, 0.0, 0.0, 1.0)

[led_effect caselight_leveling]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	gradient	3.0	3.0			add	(0.0, 0.0, 1.0), (0.0, 0.0, 1.0), (1.0, 0.0, 0.0), (1.0, 0.0, 0.0)

[led_effect caselight_homing]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	gradient	1.0	2.0		add	(1.0, 1.0, 0.0), (0.0, 0.0, 0.0), (0.0, 1.0, 1.0), (0.0, 0.0, 0.0)

[led_effect caselight_soaking]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	gradient	0.3	6.00		add	(0.0, 0.0, 0.0), (1.0, 0.5, 0.0)
	twinkle		5.0	0.05		add	(1.0, 1.0, 1.0)
#	pattern		0.4	1.0		add	(0.0, 0.5, 1.0), (0.3, 0.5, 0.5), (0.0, 1.0, 0.0) 

[led_effect caselight_cleaning]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	comet		2.0		5.0		add	(1.0, 0.0, 0.5, 0.0), (1.0, 0.0, 0.5, 0.0)
	comet		-2.0	5.0		add	(1.0, 0.5, 0.0, 0.0), (1.0, 0.5, 0.0, 0.0)

[led_effect caselight_meshing]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	breathing	3.0	1.0		top	(0.2, 1.0, 0.0)

[led_effect critical_error]
leds:
	neopixel:caselight
autostart:							false
frame_rate:							24
run_on_error:						true
layers:
	strobe		1.0	1.5		add			(1.0, 1.0, 1.0, 1.0)
	breathing	2.0	0.0		difference	(0.95, 0.0, 0.0, 0.0)
	static		1.0	0.0		top			(1.0, 0.0, 0.0, 0.0)

[led_effect caselight_heating_bed]
leds:
	neopixel:caselight
autostart:							false
frame_rate:							24
heater:								heater_bed
layers:
	temperature	50	110		add	(0.0, 0.0, 1.0),	(1.0, 1.0, 0.0),	(1.0, 0.0, 0.0)

[led_effect caselight_heating_hotend]
leds:
	neopixel:caselight
autostart:							false
frame_rate:							24
heater:								extruder
layers:
	temperature	150		250			add	(0.0, 0.0, 1.0),	(1.0, 1.0, 0.0),	(1.0, 0.0, 0.0)

[led_effect caselight_warming_hotend]
leds:
	neopixel:caselight
autostart:							false
frame_rate:							24
heater:								extruder
layers:
	temperature	40		150			add	(0.0, 0.0, 1.0), (1.0, 1.0, 0.0), (1.0, 0.0, 0.0)

[led_effect caselight_calibrating_z]
autostart:				false
frame_rate:				24
leds:
	neopixel:caselight
layers:
	breathing		3.0		1.0			add	(0.0, 0.0, 0.4), (0.0, 0.4, 0.0)

[led_effect rainbow_caselight]
leds:
	neopixel:caselight
autostart:							false
frame_rate:							24
layers:
	gradient	1.0		1.0			add	(1.0, 0.0, 0.0), (0.0, 1.0, 0.0), (0.0, 0.0, 1.0)

[led_effect epilepsie]
leds:
	neopixel:caselight
autostart:							false
frame_rate:							24
layers:
	blink		0.2		1.0			add	(1.0, 0.0, 0.0), (0.0, 1.0, 0.0), (0.0, 0.0, 1.0)

#######################
# The Lighting Macros #
#######################

[gcode_macro _LED_Vars]
variable_blacklight_state:               0
variable_caselight_white_state:          0
variable_caselight_police_state:         0
gcode:

[gcode_macro TOGGLE_BLACKLIGHT]
gcode:
	{% set blacklight_state = printer["gcode_macro _LED_Vars"].blacklight_state %}
	{% if blacklight_state > 0 %}
		SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=blacklight_state VALUE={ 0 }
		SET_PIN PIN=blacklight VALUE=0
	{% else %}
		SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=blacklight_state VALUE={ 1 }
		SET_PIN PIN=blacklight VALUE=1
	{% endif %}

[gcode_macro TOGGLE_CASELIGHT_WHITE]
gcode:
	{% set force_state = params.FORCE_STATE | default(-1) | int %}
	{% set caselight_white_state = printer["gcode_macro _LED_Vars"].caselight_white_state %}
	
	{% if force_state == 1 %}
		SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_white_state VALUE={ 1 }
		SET_LED_EFFECT EFFECT=overhead_white_on FADETIME=1
		UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
	{% elif force_state == 0 %}
		SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_white_state VALUE={ 0 }
		SET_LED_EFFECT EFFECT=overhead_white_on STOP=1 FADETIME=1
		UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
	{% else %}
		{% if caselight_white_state > 0 %}
			SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_white_state VALUE={ 0 }
			SET_LED_EFFECT EFFECT=overhead_white_on STOP=1 FADETIME=1
			UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
		{% else %}
			SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_white_state VALUE={ 1 }
			SET_LED_EFFECT EFFECT=overhead_white_on FADETIME=1
			UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
		{% endif %}
	{% endif %}

[gcode_macro TOGGLE_CASELIGHT_POLICE]
gcode:
	{% set caselight_police_state = printer["gcode_macro _LED_Vars"].caselight_police_state %}
	{% if caselight_police_state > 0 %}
		SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_police_state VALUE={ 0 }
		SET_LED_EFFECT EFFECT=caselight_leveling STOP=1 FADETIME=1
		M117 You're free to go...
		M118 You're free to go...
		UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
	{% else %}
		SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_police_state VALUE={ 1 }
		SET_LED_EFFECT EFFECT=caselight_leveling FADETIME=1
		M117 You're under arrest!
		M118 You're under arrest!
		UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
	{% endif %}

[gcode_macro LED_STATUS_OFF]
gcode:
	SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_white_state VALUE={ 0 }
	STOP_LED_EFFECTS LEDS="neopixel:caselight" FADETIME=1

[gcode_macro LED_STATUS_READY]
gcode:
	TOGGLE_CASELIGHT_WHITE FORCE_STATE=0
	
	SET_LED_EFFECT EFFECT=rainbow_caselight
	SET_LED_EFFECT EFFECT=rainbow_caselight STOP=1 FADETIME=10

	# Set the state of the caseline_white_state so it's not out of sync.
	SET_GCODE_VARIABLE MACRO=_LED_Vars VARIABLE=caselight_white_state VALUE={ 1 }
	SET_LED_EFFECT EFFECT=overhead_white_on FADETIME=10

[gcode_macro LED_STATUS_PRINTING]
gcode:
	TOGGLE_CASELIGHT_WHITE FORCE_STATE=1

[gcode_macro LED_STATUS_WARMING_HOTEND]
gcode:
	SET_LED_EFFECT EFFECT=caselight_warming_hotend FADETIME=2

[gcode_macro LED_STATUS_WARMING_HOTEND_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_warming_hotend STOP=1 FADETIME=5

[gcode_macro LED_STATUS_HEATING_HOTEND]
gcode:
	SET_LED_EFFECT EFFECT=caselight_heating_hotend FADETIME=2

[gcode_macro LED_STATUS_HEATING_HOTEND_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_heating_hotend STOP=1 FADETIME=5

[gcode_macro LED_STATUS_HEATING_BED]
gcode:
	SET_LED_EFFECT EFFECT=caselight_heating_bed FADETIME=2

[gcode_macro LED_STATUS_HEATING_BED_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_heating_bed STOP=1 FADETIME=2

[gcode_macro LED_STATUS_HOMING]
gcode:
	SET_LED_EFFECT EFFECT=caselight_homing FADETIME=2

[gcode_macro LED_STATUS_HOMING_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_homing STOP=1 FADETIME=2

[gcode_macro LED_STATUS_CALIBRATING_Z]
gcode:
	SET_LED_EFFECT EFFECT=caselight_calibrating_z FADETIME=2

[gcode_macro LED_STATUS_CALIBRATING_Z_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_calibrating_z STOP=1 FADETIME=2

[gcode_macro LED_STATUS_MESHING]
gcode:
	SET_LED_EFFECT EFFECT=caselight_meshing FADETIME=2

[gcode_macro LED_STATUS_MESHING_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_meshing STOP=1 FADETIME=2

[gcode_macro LED_STATUS_LEVELING]
gcode:
	SET_LED_EFFECT EFFECT=caselight_leveling FADETIME=2

[gcode_macro LED_STATUS_LEVELING_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_leveling STOP=1 FADETIME=2

[gcode_macro LED_STATUS_HEAT_SOAKING]
gcode:
	SET_LED_EFFECT EFFECT=caselight_soaking FADETIME=2

[gcode_macro LED_STATUS_HEAT_SOAKING_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_soaking STOP=1 FADETIME=2

[gcode_macro LED_STATUS_CLEANING]
gcode:
	SET_LED_EFFECT EFFECT=caselight_cleaning FADETIME=2

[gcode_macro LED_STATUS_CLEANING_END]
gcode:
	SET_LED_EFFECT EFFECT=caselight_cleaning STOP=1 FADETIME=2

[gcode_macro LED_STATUS_CRITICAL_ERROR]
gcode:
	SET_LED_EFFECT EFFECT=overhead_white_on STOP=1
	SET_LED_EFFECT EFFECT=critical_error FADETIME=2

[gcode_macro LED_STATUS_CRITICAL_ERROR_END]
gcode:
	SET_LED_EFFECT EFFECT=overhead_white_on FADETIME=2
	SET_LED_EFFECT EFFECT=critical_error STOP=1 FADETIME=2

[gcode_macro LED_STATUS_PART_READY]
gcode:
	LED_STATUS_OFF
	SET_LED_EFFECT EFFECT=rainbow_caselight FADETIME=2

[gcode_macro LED_STATUS_PART_READY_END]
gcode:
	SET_LED_EFFECT EFFECT=rainbow_caselight STOP=1 FADETIME=30

[gcode_macro _STATUS_LED_CL]
gcode:
	{% set status = printer['gcode_macro _STATUS_VARIABLES'].printer_status %}
	# don't need all these case checks, as we just print out status in all cases, but if you wanted to do custom LED lighting in your own or did want to do something special, this is template
	# { action_respond_info("Printer status in LED.CFG is: " ~ status) }
	{% if status == "READY" %}
		LED_STATUS_READY
	{% elif status == "PRINTING" %}
		LED_STATUS_PRINTING
	# {% elif status == "BUSY" %}
		# LED_STATUS_BUSY_SB
	# {% elif status == "BUSY_END" %}
		# LED_STATUS_BUSY_END_SB
	{% elif status == "WARMING_HOTEND" %}
		LED_STATUS_WARMING_HOTEND
	{% elif status == "WARMING_HOTEND_END" %}
		LED_STATUS_WARMING_HOTEND_END
	{% elif status == "HEATING_HOTEND" %}
		LED_STATUS_HEATING_HOTEND
	{% elif status == "HEATING_HOTEND_END" %}
		LED_STATUS_HEATING_HOTEND_END
	{% elif status == "HEATING_BED" %}
		LED_STATUS_HEATING_BED
	{% elif status == "HEATING_BED_END" %}
		LED_STATUS_HEATING_BED_END
	{% elif status == "HOMING" %}
		LED_STATUS_HOMING
	{% elif status == "HOMING_END" %}
		LED_STATUS_HOMING_END
	{% elif status == "CALIBRATING_Z" %}
		LED_STATUS_CALIBRATING_Z
	{% elif status == "CALIBRATING_Z_END" %}
		LED_STATUS_CALIBRATING_Z_END
	{% elif status == "MESHING" %}
		LED_STATUS_MESHING
	{% elif status == "MESHING_END" %}
		LED_STATUS_MESHING_END
	{% elif status == "LEVELING" %}
		LED_STATUS_LEVELING
	{% elif status == "LEVELING_END" %}
		LED_STATUS_LEVELING_END
	{% elif status == "HEAT_SOAKING" %}
		LED_STATUS_HEAT_SOAKING
	{% elif status == "HEAT_SOAKING_END" %}
		LED_STATUS_HEAT_SOAKING_END
	{% elif status == "CLEANING" %}
		LED_STATUS_CLEANING
	{% elif status == "CLEANING_END" %}
		LED_STATUS_CLEANING_END
	# {% elif status == "COOLING" %}
		# LED_STATUS_COOLING
	# {% elif status == "COOLING_END" %}
		# LED_STATUS_COOLING_END
	{% elif status == "CRITICAL_ERROR" %}
		LED_STATUS_CRITICAL_ERROR
	{% elif status == "CRITICAL_ERROR_END" %}
		LED_STATUS_CRITICAL_ERROR_END
	{% elif status == "PART_READY" %}
		LED_STATUS_PART_READY
	{% elif status == "PART_READY_END" %}
		LED_STATUS_PART_READY_END
	{% endif %}

[gcode_macro LEDS_OFF]
variable_available_leds	: ["LED_STATUS_OFF", "LED_STATUS_OFF_SB"]
description: Turns off all LEDs
gcode:
	{% for macro in available_leds %}
		{macro}
	{% endfor %}
	